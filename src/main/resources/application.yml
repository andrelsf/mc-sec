quarkus:
  profile: ${QUARKUS_PROFILE:dev}
  application:
    name: ${QUARKUS_APP_NAME:mcsec}
  shutdown:
    timeout: 5
  banner:
    enabled: false
  http:
    port: ${QUARKUS_HTTP_PORT:8091}
  datasource:
    db-kind: ${QUARKUS_DATASOURCE_KIND:postgresql}
    jdbc:
      url: ${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://10.200.0.201:5432/mcsec}
    username: ${QUARKUS_DATASOURCE_USERNAME:mcsec}
    password: ${QUARKUS_DATASOURCE_PASSWORD:mcsec}
  hibernate-orm:
    database:
      generation: none
  liquibase:
    migrate-at-start: true
    change-log: "liquibase/changelog.yml"
  log:
    console:
      enable: true
      level: DEBUG
      format: "%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n"

kafka:
  bootstrap:
    servers: localhost:9092
mp:
  messaging:
    incoming:
      # Configuring the incoming channel (reading from Kafka)
      sec-new-order:
        connector: smallrye-kafka
        topic: sec-new-order
        value:
          deserializer: br.dev.multicode.utils.deserializers.OrderMessageDeserializer
      sec-response-status:
        connector: smallrye-kafka
        topic: sec-response-status
        value:
          deserializer: br.dev.multicode.utils.deserializers.OrderInventoryStatusDeserializer
    outgoing:
      # Configuring the outgoing channel (writing to Kafka)
      sec-inventory:
        connector: smallrye-kafka
        topic: sec-inventory
        value:
          serializer: io.quarkus.kafka.client.serialization.JsonbSerializer